import {useEffect, useContext} from 'react';
import useFetch from 'hooks/useFetch';
/**
 * Сеттер стейта
 */
import {CurrentUserContext} from 'context/currentUser';
import useLocalStorage from 'hooks/useLocalStorage'
/**
 * 
 * @param {*} param0 
 */
const CurrentUserChecker = ({children}) => {
   const [{response}, doFetch] = useFetch('/user')
   const [, setCurrentUserState] = useContext(CurrentUserContext)
   const [token] = useLocalStorage('token')
console.log('currentUserChecker', response)
   useEffect(() => {
      if(!token) {
         setCurrentUserState((state) => ({
            ...state,
            isLoggedIn: false
         }))
         return
      }
      
      doFetch()
      setCurrentUserState((state) => ({
         ...state,
         isLoading: true
      }))
   }, [response, setCurrentUserState, doFetch, token])

   useEffect(() => {
      if(!response) {
         return
      }
      setCurrentUserState((state) => ({
         ...state,
         isLoggedIn: true,
         isLoading: false,
         currentUser: response.user
      }))
   }, [response, setCurrentUserState, doFetch, token])
   return children
}

export default CurrentUserChecker