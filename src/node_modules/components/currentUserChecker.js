import {useEffect, useContext} from 'react';
import useFetch from 'hooks/useFetch';
/**
 * Сеттер стейта
 */
import {CurrentUserContext} from 'context/currentUser';
import useLocalStorage from 'hooks/useLocalStorage'
/**
 * 
 * @param {*} param0 
 */
const CurrentUserChecker = ({children}) => {
   const [{response}, doFetch] = useFetch('/user')
   const [, dispatch] = useContext(CurrentUserContext)
   const [token] = useLocalStorage('token')
console.log('currentUserChecker', response)
   useEffect(() => {
      if(!token) {
         dispatch({
            type: 'SET_UNAUTHORIZED'
         })
         // setCurrentUserState((state) => ({
         //    ...state,
         //    isLoggedIn: false
         // }))
         return
      }
      
      doFetch()
      dispatch({
         type:'LOADING'
      })
      // setCurrentUserState((state) => ({
      //    ...state,
      //    isLoading: true
      // }))
   }, [dispatch, doFetch, token])

   useEffect(() => {
      if(!response) {
         return
      }
      dispatch({
         type: 'SET_AUTHORIZED',
         payload: response.user
      })
      // setCurrentUserState((state) => ({
      //    ...state,
      //    isLoggedIn: true,
      //    isLoading: false,
      //    currentUser: response.user
      // }))
   }, [dispatch, response])
   return children
}

export default CurrentUserChecker