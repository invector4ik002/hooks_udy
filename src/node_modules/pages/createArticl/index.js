import React, {useEffect, useState, useContext} from 'react';
import { Redirect } from 'react-router-dom';

import {ArticleForm} from 'components/articleForm';
import useFetch from 'hooks/useFetch';
import {CurrentUserContext} from 'context/currentUser';
/**
 * @component [<CreateArticle>] - отрисовка формы заполнения поста
 * const apiUrl = '/article' - путь отправки поста
 * const initialValues ={} - transmits
 * const handleSubmit = (data) => transmits
 * const [{response, error}, doFetch] = useFetch(apiUrl)
 */
export const CreateArticle = () => {
   const apiUrl = '/articles'
   const [{response, error}, doFetch] = useFetch(apiUrl)
   const [currentUserState] = useContext(CurrentUserContext)
   const initialValues = {
      title: '',
      description: '',
      body: '',
      tagList: [],
   }

   const [isSuccessFullSubmit, setIsSuccessFullSubmit] = useState(false)
   const handleSubmit = (article) => {
      console.log('createArticl handleSubmit():', article)
      doFetch({
         method: 'post',
         data: {
            article // заполненные поля формы поста
         }
      })
   }

   useEffect(() => {
   if(!response) {
      return
   }

   setIsSuccessFullSubmit(true)
   }, [response])

   if(currentUserState.isLoggedIn === false) {
      return <Redirect to='/'/>
   }
   
   if(isSuccessFullSubmit) {
      return <Redirect to={`/articles/${response.article.slug}`}/>
   }

   return (
      <div>
         <ArticleForm
            errors={(error && error.errors) || {}}
            initialValues={initialValues}
            onSubmit={handleSubmit}
         />
      </div>
   )
}