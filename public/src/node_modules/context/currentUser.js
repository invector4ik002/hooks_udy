/**
 * @function [<createContext>] - React компонент для создания контекста что то типа Redux 
 * @function [<useState>] - Хук состаяния
 * export const CurrentUserContext = createContext([{}, () => {}]) - создаем контекст, экспортируем
 * createContext([{текущее}, () => {меняющееСостояние}]) - несет в себе состояние 
 * export const CurrentUserProvider = ({children}) => {} - функция с аргументом который передаст 
 * обернутым доступ к const [state, setState] = useState({})
 * isLoading: false, - загружаем юзера или нет, загружаем или закончили
 * isLoggedIn: null, - залогинин юзер лил нет 
 * currentUser: null - наш респонс котрый мы получили от бэкенда
 * <CurrentUserContext.Provider value={[state, setState]}> - элемент jsx в который мы сможем обернуть наши компоненты
 * несет в себе value={[state, setState]} состояние текущее и состояние его меняющее
 */
import {createContext, useState} from 'react';
import React from 'react';

export const CurrentUserContext = createContext([{}, () => {}])

export const CurrentUserProvider = ({children}) => {
   const [state, setState] = useState({
      isLoading: false,
      isLoggedIn: null,
      currentUser: null
   })
   return (
      <CurrentUserContext.Provider value={[state, setState]}>
         {children}
      </CurrentUserContext.Provider>
   )
}